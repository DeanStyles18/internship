import 'dart:ui';
import 'package:flutter/material.dart';
import 'dart:convert';
import 'package:http/http.dart' as http;
import 'package:flutter_html/flutter_html.dart';
import 'package:standups/api/api_url.dart';
import 'package:standups/artist_bio.dart';
import 'package:standups/contants/app_colors.dart';
import 'package:standups/contants/app_contants.dart';
import 'dart:math';
import 'artist_models.dart' as artistModels;
import 'artist_detail_models.dart' as artistDetails;
import 'models/videos_model.dart' as videoModels;
import 'video_detail.dart';
import 'navigation_bar.dart'; 

class ArtistDetailsPage extends StatefulWidget {
  final int artistId;
  artistModels.Data? data;

  ArtistDetailsPage({Key? key, required this.artistId, required this.data})
      : super(key: key);

  @override
  _ArtistDetailsPageState createState() => _ArtistDetailsPageState();
}

class _ArtistDetailsPageState extends State<ArtistDetailsPage> {
  String? _artistBio;
  List<videoModels.Data>? _playlists;
  bool _isLoading = true;
  bool _isBioExpanded = false;
  int selectCount = 0;
  artistDetails.Data? _bioData;

  // Color set for random assignment
  final List<Color> _colors = [
    Color(0xFFE51E31), // Bright Red
    Color(0xFF158A08), // Bright Green
    Color(0xFF0C72EE), // Bright Blue
    Color(0xFFFF0090), // Magenta
    Color(0xFFDB148B), // Similar Magenta
    Color(0xFFB85D06), // Brown
    Color(0xFFE8125C), // Pink
    Color(0xFF951118), // Dark Maroon
    Color(0xFF1E3264), // Dark Blue
    Color(0xFFA56752), // Other Color
  ];

  late Color _gradientColor;

  @override
  void initState() {
    super.initState();
    _gradientColor = _colors[Random().nextInt(_colors.length)];
    _fetchArtistDetails();
  }

  Future<void> _fetchArtistDetails() async {
    // API URLs
    final artistUrl =
        '${ApiUrls.baseURl}artist/get-public-artist?artist_id=${widget.artistId}&pageNo=1&itemPerPage=1';
    final bioUrl =
        '${ApiUrls.baseURl}artist/get-public-artist-wiki-bio?artist_id=${widget.artistId}&pageNo=1&itemPerPage=1';

    print(artistUrl);
    print(bioUrl);
    final playlistUrl =
        '${ApiUrls.baseURl}playlist/get-public-playlist?artist_id=${widget.artistId}&shortVideos=false&pageNo=1&itemPerPage=15';

    try {
      // Fetch artist details
      if (widget.data == null) {
        final artistResponse = await http.get(Uri.parse(artistUrl));
        if (artistResponse.statusCode == 200) {
          final artistJsonResponse = json.decode(artistResponse.body);
          final artistData =
              artistModels.Autogenerated.fromJson(artistJsonResponse);
          if (artistData.data != null && artistData.data!.isNotEmpty) {
            setState(() {
              widget.data = artistData.data![0];
            });
          } else {
            throw Exception('No artist data found');
          }
        } else {
          throw Exception('Failed to load artist details');
        }
      }

      // Fetch artist bio
      final bioResponse = await http.get(Uri.parse(bioUrl));
      if (bioResponse.statusCode == 200) {
        final bioJsonResponse = json.decode(bioResponse.body);
        final bioData = artistDetails.Autogenerated.fromJson(bioJsonResponse);
        if (bioData.data != null && bioData.data!.isNotEmpty) {
          setState(() {
            _artistBio = bioData.data![0].artistBio;
            _bioData = bioData.data![0];
          });
        }
      } else {
        throw Exception('Failed to load artist bio');
      }

      // Fetch playlists
      final playlistResponse = await http.get(Uri.parse(playlistUrl));
      if (playlistResponse.statusCode == 200) {
        final playlistJsonResponse = json.decode(playlistResponse.body);
        final playlistData =
            videoModels.Autogenerated.fromJson(playlistJsonResponse);
        if (playlistData.data != null && playlistData.data!.isNotEmpty) {
          setState(() {
            _playlists = playlistData.data;
          });
        }
      } else {
        throw Exception('Failed to load playlists');
      }

      setState(() {
        _isLoading = false;
      });
    } catch (e) {
      print('Error fetching artist details: $e');
      setState(() {
        _isLoading = false;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    if (_isLoading) {
      return Scaffold(
        body: Center(
          child: CircularProgressIndicator(),
        ),
      );
    }

    return Scaffold(
      body: SingleChildScrollView(
        physics: BouncingScrollPhysics(),
        padding: const EdgeInsets.only(top: 0.0),
        child: Padding(
          padding: const EdgeInsets.all(0.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              // Row for artist image and name
              Container(
                height: 300,
                width: double.infinity,
                decoration: BoxDecoration(
                  image: DecorationImage(
                    image: NetworkImage(widget.data!.artistLargeImg ?? ''),
                    fit: BoxFit.cover,
                    colorFilter: ColorFilter.mode(
                      Colors.black.withOpacity(0.8),
                      BlendMode.darken,
                    ),
                  ),
                ),
                child: Stack(
                  children: [
                    BackdropFilter(
                      filter: ImageFilter.blur(sigmaX: 2, sigmaY: 2),
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.center,
                        mainAxisAlignment: MainAxisAlignment.end,
                        children: [
                          Container(
                            width: 100.0,
                            height: 100.0,
                            decoration: BoxDecoration(
                              shape: BoxShape.circle,
                              image: DecorationImage(
                                image: NetworkImage(
                                    widget.data!.artistSmallImg ?? ''),
                                fit: BoxFit.cover,
                              ),
                            ),
                          ),
                          Center(
                            child: Text(
                              widget.data!.artistName ?? 'Unknown Artist',
                              style: TextStyle(
                                fontSize: 20.0,
                                fontWeight: FontWeight.bold,
                                color: Colors.white,
                              ),
                            ),
                          ),
                          SizedBox(height: 0.0),
                          Text(
                            widget.data!.channelName ?? 'Unknown Artist',
                            style: TextStyle(
                              fontSize: 11.0,
                              fontWeight: FontWeight.bold,
                              color: Colors.white.withOpacity(0.6),
                            ),
                          ),
                          SizedBox(height: 8,),
                          Container(
                            padding: const EdgeInsets.symmetric(horizontal: 16.0),
                            child: Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [

                                Row(
                                  children: [
                                    Expanded(
                                      flex: 1,
                                      child: Container(
                                        alignment: Alignment.center,
                                        height: 45,
                                        margin: EdgeInsets.symmetric(horizontal: 10,vertical: 8),
                                        decoration: BoxDecoration(
                                          color: selectCount ==0 ? AppColors.primaryColor : Colors.transparent,
                                          border: Border.all(color: AppColors.primaryColor,width: 0.8),
                                          borderRadius: BorderRadius.circular(10),
                                        ),
                                        child: InkWell(
                                          onTap: (){
                                            print("click ");
                                            if(_playlists!.isNotEmpty){
                                              print("click ");
                                              Navigator.push(
                                                context,
                                                MaterialPageRoute(
                                                  builder: (context) => VideoDetailPage(
                                                      finalVideoPageId:
                                                      _playlists![0].videosFinalDataId!.toString()),
                                                ),
                                              );
                                            }
                                          },
                                          child: Row(
                                            mainAxisAlignment: MainAxisAlignment.center,
                                            children: [
                                              CircleAvatar(
                                                  backgroundColor:Colors.white,
                                                  radius: 10,
                                                  child: Icon(Icons.play_arrow,color: Colors.black,size: 15,)),
                                              SizedBox(width: 6,),
                                              Text("Play",style: TextStyle(fontSize: 14,color: Colors.white,fontWeight: FontWeight.bold),),
                                            ],
                                          ),
                                        ),
                                      ),
                                    ),
                                    Expanded(
                                      flex: 1,
                                      child: InkWell(
                                        onTap: (){

                                        },
                                        child: Container(
                                          height: 45,
                                          alignment: Alignment.center,

                                          margin: EdgeInsets.symmetric(horizontal: 10,vertical: 8),
                                          decoration: BoxDecoration(
                                            color:  Colors.white,
                                            border: Border.all(color: AppColors.primaryColor,width: 0.8),
                                            borderRadius: BorderRadius.circular(10),
                                          ),
                                          child: Row(
                                            mainAxisAlignment: MainAxisAlignment.center,
                                            children: [
                                              Icon(Icons.playlist_add_rounded,color: Colors.black,),
                                              SizedBox(width: 6,),
                                              Text("Add Playlist",style: TextStyle(fontSize: 14,color: Colors.black,fontWeight: FontWeight.bold),),
                                            ],
                                          ),
                                        ),
                                      ),
                                    )
                                  ],
                                ),

                                // if (_artistBio != null)
                                //   Html(
                                //     data: _isBioExpanded
                                //         ? _artistBio!.replaceAll('<br>', '\n')
                                //         : _truncateBio(_artistBio!)
                                //             .replaceAll('<br>', '\n'),
                                //     style: {
                                //       "body": Style(
                                //         margin: Margins.all(0),
                                //         color: Colors.white.withOpacity(0.6),
                                //         fontSize: FontSize(14.0),
                                //       ),
                                //     },
                                //   ),
                                // InkWell(
                                //   onTap: () {
                                //     Navigator.push(
                                //       context,
                                //       MaterialPageRoute(
                                //         builder: (context) => ArtistBioPage(
                                //           artistId:
                                //               widget.artistId,
                                //         ),
                                //       ),
                                //     );
                                //   },
                                //   child: Text(
                                //     "Read More",
                                //     style: TextStyle(
                                //       color: Color.fromARGB(255, 47, 136, 209),
                                //       fontSize: 16.0,
                                //       fontWeight: FontWeight.bold,
                                //     ),
                                //   ),
                                // ),
                              ],
                            ),
                          ),

                          SizedBox(height: 10.0),
                        ],
                      ),
                    ),
                    Container(
                      decoration: BoxDecoration(),
                    ),
                    AppContents.backFunctionWidget(context)
                  ],
                ),
              ),

              SizedBox(height: 20.0),
              // Container(
              //   padding: const EdgeInsets.symmetric(horizontal: 16.0),
              //   child: Column(
              //     crossAxisAlignment: CrossAxisAlignment.start,
              //     children: [
              //
              //       Row(
              //         children: [
              //           Expanded(
              //             flex: 1,
              //             child: InkWell(
              //               onTap: (){
              //                 setState(() {
              //                   selectCount = 0;
              //                 });
              //               },
              //               child: Container(
              //                 alignment: Alignment.center,
              //                 padding: EdgeInsets.symmetric(vertical: 6),
              //                 margin: EdgeInsets.symmetric(horizontal: 4,vertical: 8),
              //                 decoration: BoxDecoration(
              //                   color: selectCount ==0 ? AppColors.primaryColor : Colors.transparent,
              //                   border: Border.all(color: AppColors.primaryColor,width: 0.8),
              //                   borderRadius: BorderRadius.circular(30),
              //                 ),
              //                 child: Text("Playlist",style: TextStyle(fontSize: 18,color: Colors.white,fontWeight: FontWeight.bold),),
              //               ),
              //             ),
              //           ),
              //           Expanded(
              //             flex: 1,
              //             child: InkWell(
              //               onTap: (){
              //                 setState(() {
              //                   selectCount = 1;
              //                 });
              //               },
              //               child: Container(
              //                 alignment: Alignment.center,
              //                 padding: EdgeInsets.symmetric(vertical: 6),
              //                 margin: EdgeInsets.symmetric(horizontal: 4,vertical: 8),
              //                 decoration: BoxDecoration(
              //                   color: selectCount ==1 ? AppColors.primaryColor : Colors.transparent,
              //                   border: Border.all(color: AppColors.primaryColor,width: 0.8),
              //                   borderRadius: BorderRadius.circular(30),
              //                 ),
              //                 child: Text("Bio",style: TextStyle(fontSize: 18,color: Colors.white,fontWeight: FontWeight.bold),),
              //               ),
              //             ),
              //           )
              //         ],
              //       ),
              //       Text(
              //         'Bio',
              //         style: TextStyle(
              //           fontSize: 20.0,
              //           fontWeight: FontWeight.bold,
              //           color: Colors.white,
              //         ),
              //       ),
              //       SizedBox(height: 8),
              //       // if (_artistBio != null)
              //       //   Html(
              //       //     data: _isBioExpanded
              //       //         ? _artistBio!.replaceAll('<br>', '\n')
              //       //         : _truncateBio(_artistBio!)
              //       //             .replaceAll('<br>', '\n'),
              //       //     style: {
              //       //       "body": Style(
              //       //         margin: Margins.all(0),
              //       //         color: Colors.white.withOpacity(0.6),
              //       //         fontSize: FontSize(14.0),
              //       //       ),
              //       //     },
              //       //   ),
              //       // InkWell(
              //       //   onTap: () {
              //       //     Navigator.push(
              //       //       context,
              //       //       MaterialPageRoute(
              //       //         builder: (context) => ArtistBioPage(
              //       //           artistId:
              //       //               widget.artistId,
              //       //         ),
              //       //       ),
              //       //     );
              //       //   },
              //       //   child: Text(
              //       //     "Read More",
              //       //     style: TextStyle(
              //       //       color: Color.fromARGB(255, 47, 136, 209),
              //       //       fontSize: 16.0,
              //       //       fontWeight: FontWeight.bold,
              //       //     ),
              //       //   ),
              //       // ),
              //     ],
              //   ),
              // ),
              //
              // SizedBox(height: 32.0),

              Padding(
                padding: const EdgeInsets.symmetric(horizontal: 16.0),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [

                    // Padding(
                    //   padding: const EdgeInsets.symmetric(horizontal: 8.0),
                    //   child: Text(
                    //     'Personal Info',
                    //     style: TextStyle(
                    //       fontSize: 18,
                    //       fontWeight: FontWeight.bold,
                    //       color: Colors.white,
                    //
                    //     ),
                    //   ),
                    // ),
                    // personalWidget("Father Name",_bioData!.artistFatherName!),
                    // personalWidget("Mother Name",_bioData!.artistMotherName!),
                    // personalWidget("Date Of Birth",_bioData!.artistDob!),
                    // personalWidget("Married",_bioData!.artistRelationshipStatus!),
                    // personalWidget("City",_bioData!.artistCity!),

                    //SizedBox(height: 10,),


                    Padding(
                      padding: const EdgeInsets.symmetric(horizontal: 8.0),
                      child: Text(
                        'Biography',
                        style: TextStyle(
                          fontSize: 18,
                          fontWeight: FontWeight.bold,
                          color: Colors.white,
                        ),
                      ),
                    ),
                    SizedBox(height: 0),
                    // Clean bio text to remove any HTML tags like <br>
                    Html(
                      data: _isBioExpanded
                          ?_artistBio
                          : _parseBio(_artistBio!.replaceAll('<br>', '\n'), 50),
                      style: {
                        'body': Style(
                          fontSize: FontSize(12),
                          color: Colors.white70,
                        ),
                      },
                    ),

                      Align(
                        alignment: Alignment.bottomRight,
                        child: GestureDetector(
                          onTap: () {
                            setState(() {
                              _isBioExpanded = !_isBioExpanded;
                            });
                          },
                          child: Text(
                            _isBioExpanded ? 'Read Less' : 'Read More',
                            style: TextStyle(
                              color: Colors.blue,
                              fontSize: 14,
                              fontWeight: FontWeight.bold,
                            ),
                          ),
                        ),
                      ),
                  ],
                ),
              ),
            SizedBox(height: 10,),
            GridView.builder(
                physics: NeverScrollableScrollPhysics(),
                shrinkWrap: true,
                padding: EdgeInsets.symmetric(horizontal: 5),
                gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                  crossAxisCount: 1,
                  crossAxisSpacing: 10.0,
                  mainAxisSpacing: 10.0,
                  mainAxisExtent: 190,
                ),
                itemCount: _playlists?.length ?? 0,
                itemBuilder: (context, index) {
                  final video = _playlists![index];
                  final randomColor =
                      _colors[Random().nextInt(_colors.length)];
                  return GestureDetector(
                    onTap: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) => VideoDetailPage(
                              finalVideoPageId:
                                  video.videosFinalDataId!.toString()),
                        ),
                      );
                    },
                    child: Card(
                      color: Colors.transparent,
                      shape: RoundedRectangleBorder(
                        side: BorderSide(color: randomColor),
                        borderRadius: BorderRadius.circular(12.0),
                      ),
                      child: Stack(
                        children: [
                          // The image part
                          Container(
                            decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(12.0),
                              image: DecorationImage(
                                image: NetworkImage(
                                    video.videoLargeImg ?? ''),
                                fit: BoxFit.cover,

                              ),
                            ),
                            height:
                                180.0,
                          ),
                          Container(
                            height: 190.0,
                            decoration: BoxDecoration(

                                gradient: LinearGradient(
                                    begin: FractionalOffset.topCenter,
                                    end: FractionalOffset.bottomCenter,
                                    colors: [
                                      Colors.black.withOpacity(0.1),
                                      Colors.black.withOpacity(0.3),
                                      Colors.black.withOpacity(0.7),
                                      Colors.black.withOpacity(0.9),
                                    ],
                                    stops: [
                                      0.0,
                                      0.4,
                                      0.6,
                                      0.8
                                    ])),
                          ),
                          Column(
                            mainAxisAlignment: MainAxisAlignment.end,

                            children: [
                              Container(

                                decoration:BoxDecoration(


                                ),
                                child: Padding(
                                  padding: const EdgeInsets.symmetric(
                                      horizontal: 2.0, vertical: 4.0),
                                  child: Row(
                                    crossAxisAlignment:
                                    CrossAxisAlignment.start,
                                    children: [
                                      Expanded(
                                        flex:9,
                                        child: Padding(
                                          padding: const EdgeInsets.symmetric(horizontal: 8.0),
                                          child: Column(
                                            crossAxisAlignment: CrossAxisAlignment.start,
                                            children: [
                                              Text(
                                                video.videoTitle ?? 'Unknown Title',
                                                style: TextStyle(
                                                    color: Colors.white,
                                                    fontSize: 14.0),
                                                maxLines: 1,
                                                overflow: TextOverflow.ellipsis,
                                              ),
                                               Row(
                                          mainAxisAlignment:
                                          MainAxisAlignment.start,
                                          children: [
                                            Icon(Icons.access_time,
                                                size: 10, color: Colors.white),
                                            SizedBox(width: 4),
                                            Text(
                                              video.videoDuration ??
                                                  'Unknown Duration',
                                              style: TextStyle(
                                                  color: Colors.grey,
                                                  fontSize: 12.0),
                                            ),
                                          ],
                                                                                ),
                                            ],
                                          ),
                                        ),
                                      ),
                                     Expanded(
                                         flex: 1,
                                         child: Padding(
                                           padding: const EdgeInsets.symmetric(horizontal: 5.0,vertical: 4),
                                           child: CircleAvatar(backgroundColor: AppColors.primaryColor,child: Icon(Icons.play_arrow,color: Colors.white,size: 15,),radius: 15,),
                                         ))

                                    ],
                                  ),
                                ),
                              ),
                            ],
                          ),


                        ],
                      ),
                    ),
                  );
                },
              )
            ],
          ),
        ),
      ),
      backgroundColor: Colors.black,
      bottomNavigationBar: BottomNavBarWidget(
          currentRoute: '/artist'), 
    );
  }

  String _truncateBio(String bio) {
    if (bio.length > 200) {
      return bio.substring(0, 200) + '...';
    }
    return bio;
  }

  Widget personalWidget(String title,String value){
    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 8.0,vertical: 6),
      child: Row(
        children: [
          Expanded(
              flex: 4,
              child: Text(title,style: TextStyle(fontSize: 12,color: Colors.white.withOpacity(0.6)),)),
          Expanded(
              flex: 1,
              child: Text(":",style: TextStyle(fontSize: 12,color: Colors.white.withOpacity(0.6)),)),

          Expanded(
              flex: 5,
              child: Text(value,style: TextStyle(fontSize: 12,color: Colors.white),)),
        ],
      ),
    );
  }

  String _parseBio(String bio, int maxLength) {
    // Limit text to a maximum length to approximate lines
    return bio.length > maxLength ? '${bio.substring(0, maxLength)}...' : bio;
  }
}
