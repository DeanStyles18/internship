import 'package:flutter/material.dart';
import 'package:standups/contants/app_contants.dart';
import 'api/api_url.dart';
import 'models/trending.dart' as Trending;
import 'api_service.dart'; 
import 'video_detail.dart'; 

class RecentlyWatchedSlider extends StatefulWidget {
  final Color textColor; 

  RecentlyWatchedSlider({this.textColor = Colors.white});
  @override
  _RecentlyWatchedSliderState createState() => _RecentlyWatchedSliderState();
}

class _RecentlyWatchedSliderState extends State<RecentlyWatchedSlider> {
  Future<Trending.Autogenerated>? _trendingVideosFuture;

  @override
  void initState() {
    super.initState();
    final apiService = ApiService(
        '${ApiUrls.baseURl}playlist/get-public-playlist?shortVideos=false&pageNo=1&itemPerPage=10');
    _trendingVideosFuture = apiService.fetchTrendingVideos();
  }

  void _navigateToVideoDetail(int videoId) {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) => VideoDetailPage(finalVideoPageId: videoId.toString()),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 6.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Padding(
            padding: const EdgeInsets.symmetric(horizontal: 10.0,vertical: 10),
            child: Text(
              "Recently Watched",
              style: TextStyle(
                fontSize: 18,
                fontWeight: FontWeight.bold,
                color: widget.textColor,
              ),
            ),
          ),
          FutureBuilder<Trending.Autogenerated>(
            future: _trendingVideosFuture,
            builder: (context, snapshot) {
              if (snapshot.connectionState == ConnectionState.waiting) {
                return Center(child: CircularProgressIndicator());
              } else if (snapshot.hasError) {
                return Center(child: Text('Error: ${snapshot.error}'));
              } else if (!snapshot.hasData ||
                  snapshot.data!.data == null ||
                  snapshot.data!.data!.isEmpty) {
                return Center(child: Text('No videos found'));
              } else {
                final videos = snapshot.data!.data!;
                return Padding(
                  padding: const EdgeInsets.symmetric(horizontal: 16.0),
                  child: GridView.builder(
                    padding: EdgeInsets.zero,
                    itemCount:videos.length > 4 ? 4 :  videos.length,
                    physics: NeverScrollableScrollPhysics(),
                    shrinkWrap: true,
                    gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                        crossAxisCount: 2, // 3 items per row

                        crossAxisSpacing: 8.0,
                        mainAxisSpacing: 8.0,
                        mainAxisExtent: 180
                    ),
                    itemBuilder: (context, index) {
                      final video = videos[index];
                      return GestureDetector(
                        onTap: () {
                          Navigator.pushNamed(
                            context,
                            '/shorts',
                            arguments: videos[index].videosFinalDataId.toString(),
                          );
                        },
                        child: Container(
                          decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(10.0),
                          ),
                          child: Stack(
                            children: [
                              Container(
                                child: AppContents.placeHolderImage(
                                  imageURl: video.videoMediumImg,
                                  height: double.infinity,
                                  width: double.infinity,
                                  rightRadius: 10,
                                  topRadius: 10,
                                  bottomRightRidus: 10,
                                  bottomRadius: 10,
                                ),
                              ),
                              Align(
                                alignment: Alignment.bottomCenter,
                                child: Container(
                                  width: double.infinity,
                                  decoration: BoxDecoration(
                                    borderRadius: BorderRadius.only(
                                      bottomLeft: Radius.circular(10),
                                      bottomRight: Radius.circular(10),
                                    ),
                                    color: Colors.black.withOpacity(0.4),
                                  ),
                                  child: Padding(
                                    padding: const EdgeInsets.symmetric(horizontal: 15.0, vertical: 10),
                                    child: Text(
                                      video.videoTitle ?? "Unknown",
                                      maxLines: 1,
                                      overflow: TextOverflow.ellipsis,
                                      style: TextStyle(
                                        color: Colors.white,
                                        fontSize: 16,
                                        fontWeight: FontWeight.bold,
                                        shadows: [
                                          Shadow(
                                            blurRadius: 8.0,
                                            color: Colors.black,
                                            offset: Offset(2.0, 2.0),
                                          ),
                                        ],
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ),
                      );
                    },
                  ),
                );

                /*ListView.builder(
                  shrinkWrap: true,
                  scrollDirection: Axis.horizontal,
                  itemCount: videos.length, // Adjust count for two items per page
                  itemBuilder: (context, pageIndex) {


                    return Container(
                      width:
                      200,
                      height: 240,
                      margin: EdgeInsets.symmetric(horizontal: 10),
                      child: GestureDetector(
                        onTap: () {
                          _navigateToVideoDetail(int.parse(videos[pageIndex].videosFinalDataId!.toString()));
                        },
                        child: Container(
                          width:
                          200,
                          height: 240,
                          decoration: BoxDecoration(
                            color: Colors.black,
                            borderRadius:
                            BorderRadius.circular(16),

                            boxShadow: [
                              BoxShadow(
                                color: Colors.black.withOpacity(0.3),
                                spreadRadius: 2,
                                blurRadius: 6,
                                offset: Offset(0, 3),
                              ),
                            ],
                          ),
                          child: Column(
                            children: [
                              SizedBox(height: 8),
                              Container(
                                width:
                                200,
                                height: 240,
                                child: AppContents.placeHolderImage(imageURl: videos[pageIndex].videoMediumImg,width: 200,height: 240,topRadius: 16,rightRadius: 16,bottomRightRidus: 0,bottomRadius: 0),
                                *//*decoration: BoxDecoration(
                                  borderRadius: BorderRadius.circular(16),
                                  image: DecorationImage(
                                    image: NetworkImage(
                                        videos[pageIndex].videoMaxresImg ??
                                            videos[pageIndex].videoMediumImg ??
                                            ''),
                                    fit: BoxFit.cover,
                                  ),
                                ),*//*
                              ),
                              SizedBox(height: 8,),

                              Padding(
                                padding: const EdgeInsets.symmetric(
                                    horizontal: 8.0),
                                child: Text(
                                  videos[pageIndex].videoTitle ?? '',

                                  style: TextStyle(
                                    color: Colors
                                        .white,
                                    fontSize: 14,
                                    fontWeight: FontWeight.bold,
                                  ),
                                  maxLines: 1,
                                  overflow: TextOverflow.ellipsis,
                                ),
                              ),

                              Padding(
                                padding: const EdgeInsets.symmetric(
                                    horizontal: 8.0,vertical: 10),
                                child: Text(
                                  videos[pageIndex].videoDescription ?? '',
                                  style: TextStyle(
                                    color: Colors
                                        .white.withOpacity(0.6),
                                    fontSize: 10,

                                  ),
                                  maxLines: 2,
                                  overflow: TextOverflow.ellipsis,
                                ),
                              ),
                            ],
                          ),
                        ),
                      ),
                    );
                  },
                );*/
              }
            },
          ),
        ],
      ),
    );
  }
}
